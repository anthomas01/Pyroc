#!/usr/bin/env python3
from argparse import ArgumentParser
from pyroc.autoFoam import *

class SweepParser(ArgumentParser):
    #Class for running sweeps from terminal
    def __init__(self, description='Setup/Run Sweep'):
        super().__init__()
        self.add_argument('baseName', type=str, help='Base name for all created directories')
        self.add_argument('-d', '--rootDir', type=str, nargs='?', default=os.getcwd(), help='Case directory, must contain constant/polyMesh generated\'s')
        self.add_argument('-c', '--cases', type=str, nargs='?', default='cases.inp', help='Path to input Sweep Control File')
        self.add_argument('-t', '--turbModel', type=str, nargs='?', default='SpalartAllmaras', help='Turbulence Model to Use for All Runs: [SA, SAFV3, KE, SST]')
        self.add_argument('--wall', metavar='WALLFUNC', action='store_const', const=True, default=False, help='Turn on wall functions')
        self.add_argument('-s', '--solver', type=str, nargs='?', default=None, help='Force solver instead of automatically determining from Mach')
        self.add_argument('-n', '--nodes', type=int, default=1, help='Number of Nodes per job')
        self.add_argument('-p', '--ppn', type=int, default=1, help='Number of processors per node')
        self.add_argument('-r', metavar='START', dest='start', type=int, default=0, help='Start sweep on case START in the cases.inpt file')
        self.add_argument('-e', metavar='END', dest='end', type=int, default=None, help='End sweep on case END in the cases.inpt file')
        self.add_argument('-m', '--dirMode', type=str, nargs='?', default='flat', help='Mode to create directories in')
        self.add_argument('-q', '--queue', default='None', help='type of job to submit - possibilities are: ["None", "slurm", "condor"]')
        self.add_argument('--dryrun', metavar='DRYRUN', action='store_const', const=True, default=False, help='Print a dry run of the case setup')
        args = self.parse_args()
        
        #TODO implement post processing type and reference data
        self.sweepManager = SweepFOAM(baseName=args.baseName, rootDir=args.rootDir, cases=args.cases, rrange=[args.start,args.end],
                                      forceSolver=args.solver, turbModel=args.turbModel, wallFunctions=args.wall, dirMode=args.dirMode,
                                      nNodes=args.nodes, ppn=args.ppn, queueType=args.queue)
        self.sweepManager()

sweep = SweepParser()